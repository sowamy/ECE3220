*********** OBJECTIVES AND LAB DESCRIPTION ***********
This laboratory demonstrates strings, vectors, an operators in the C++ programming language. Strings in C++ allows a programmer to operate with and on arrays of characters during the execution of a program. An advantage of strings in C++ is that almost anything which can be displayed, can be operated on using strings. Vectors in C++ allows a programmer to effectively store and operate on a collection of numerical data. Operators allow for a user, or programmer to perform mathematical operations on collections of data, without knowing the details of how those operations are implemented. C++ presents a programmer with a large collection of tools, this lab will demonstrate some of the tools implemented withing C++ concerning strings, vectors, and operators.

*********** IMPLEMENTATION ***************************
This laboratory is separated into 2 individual sections, both containing demonstrations of the implementation of strings, vectors, and operators in C++. The first of the two sections contains 3 seperate program examples, each demonstrating one of the desired implementations. The second of the two sections contains a revision of the code from laboratory #5. This revision uses: strings, to handle file name control and user input and output; vectors, to store and operate on each sample within the signal; and operators, to allow 'public' operation on one or two signals. 

The first section of this laboratory contains 3 programs: Lab6_strings.cpp, Lab6_vectors.cpp, and Lab6_operators.cpp. Each of these programs demonstrates the respective implementation of a C++ feature. The programs originated with default examples, and questions within the source code. The goal in this laboratory was to explore each of the C++ features throughly, while answering the questions administered.

Lab6_strings.cpp demonstrates the use of C++ to obtain features of strings, also how to parse and operate on strings. Three strings are used for demonstration within this program: s1, s2, s3. The string s1 is used to store input from the user, upon which to operate upon throughout the program. The string s2 is pre-loaded with the word "Hello," upon which the program will operate during operation. The string s3 is also pre-loaded but with the word "World," which will be similarily operated on.

Lab6_strings.cpp main function starts with a rundown of a variety of string functions, which is implemented 4 other times throughout the program. This rundown features the demonstration of: <string>.empty(), <string>.size(), <string>[] indexing operations, concantination, and string comparison operations. This rundown is performed on string s1 the initial two times, and on line the remaining three times of implementation. The rundown implemented in the laboratory demonstrates each string operation, and how it changes as strings are operated on through the program execution. There is also another rundown which is used twice throughout the main function, demonstrating: toupper(<char>), tolower(<char>), isspace(<char>), and character comparisons. This rundown uses an implementation of the for loop specific to C++ programming, which allows for the operation on each, or a selection of characters within a string. 

Lab6_vectors.cpp uses a similar implementation of the for loop mentioned in the previous paragraph about strings; instead, this for loop is used to access every element within the numerical array implemened using vectors. This program demonstrates several ways of how to initiate a vector by the initiation of vectors v0-v7. The program also demonstrates a variety of functions availiable to vectors, such as: getting the size of the array, indexing the array, and appending the array without having to worry about dynamic allocation.

*********** EXPERIMENTS AND RESULTS ******************

*********** DISCUSSION AND CONCLUSIONS ***************

*********** CODE SECTION *****************************